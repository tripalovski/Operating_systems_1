GAS LISTING /tmp/ccPMNRj4.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z14idleThreadBodyv
   9              	_Z14idleThreadBodyv:
  10              	.LFB90:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/tcb.hpp"
   2:src/main.cpp  **** #include "../h/print.hpp"
   3:src/main.cpp  **** #include "../h/riscv.hpp"
   4:src/main.cpp  **** #include "../h/memoryAllocator.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** //#include "../h/syscall_cpp.hpp"
   7:src/main.cpp  **** #include "../lib/console.h"
   8:src/main.cpp  **** #include "../h/sem.hpp"
   9:src/main.cpp  **** #include "../h/myConsole.hpp"
  10:src/main.cpp  **** #include "../test/printing.hpp"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** void userMain();
  13:src/main.cpp  **** //
  14:src/main.cpp  ****     thread_t mainThread;
  15:src/main.cpp  ****     thread_t consoleOutput;
  16:src/main.cpp  ****     thread_t idleThread;
  17:src/main.cpp  **** 
  18:src/main.cpp  **** void idleThreadBody(){
  12              		.loc 1 18 22
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  22              	.L2:
  19:src/main.cpp  ****     while (true) thread_dispatch();
  23              		.loc 1 19 5 discriminator 1
  24              		.loc 1 19 18 discriminator 1
  25              		.loc 1 19 33 is_stmt 0 discriminator 1
  26 0010 97000000 		call	_Z15thread_dispatchv@plt
  26      E7800000 
  27              	.LVL0:
  28              		.loc 1 19 5 is_stmt 1 discriminator 1
  29 0018 6FF09FFF 		j	.L2
  30              		.cfi_endproc
  31              	.LFE90:
  33              		.align	2
  34              		.globl	main
  36              	main:
  37              	.LFB91:
  20:src/main.cpp  **** }
  21:src/main.cpp  **** 
  22:src/main.cpp  **** int main()
GAS LISTING /tmp/ccPMNRj4.s 			page 2


  23:src/main.cpp  **** {
  38              		.loc 1 23 1
  39              		.cfi_startproc
  40 001c 130101FE 		addi	sp,sp,-32
  41              		.cfi_def_cfa_offset 32
  42 0020 233C1100 		sd	ra,24(sp)
  43 0024 23388100 		sd	s0,16(sp)
  44 0028 23349100 		sd	s1,8(sp)
  45 002c 23302101 		sd	s2,0(sp)
  46              		.cfi_offset 1, -8
  47              		.cfi_offset 8, -16
  48              		.cfi_offset 9, -24
  49              		.cfi_offset 18, -32
  50 0030 13040102 		addi	s0,sp,32
  51              		.cfi_def_cfa 8, 0
  24:src/main.cpp  ****     // Memory
  25:src/main.cpp  ****     MemoryAllocator::initMemory();
  52              		.loc 1 25 5
  53              		.loc 1 25 32 is_stmt 0
  54 0034 97000000 		call	_ZN15MemoryAllocator10initMemoryEv@plt
  54      E7800000 
  55              	.LVL1:
  26:src/main.cpp  ****     // Main Thread
  27:src/main.cpp  ****     void* main_stack = MemoryAllocator::mem_alloc(CONVERT_SIZE_TO_BLOCKS(DEFAULT_STACK_SIZE));
  56              		.loc 1 27 5 is_stmt 1
  57              		.loc 1 27 50 is_stmt 0
  58 003c 13050001 		li	a0,16
  59 0040 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
  59      E7800000 
  60              	.LVL2:
  61 0048 93060500 		mv	a3,a0
  62              	.LVL3:
  28:src/main.cpp  ****     TCB::createThread(&mainThread, nullptr, nullptr, main_stack);
  63              		.loc 1 28 5 is_stmt 1
  64              		.loc 1 28 22 is_stmt 0
  65 004c 97040000 		lla	s1,.LANCHOR0
  65      93840400 
  66 0054 13060000 		li	a2,0
  67 0058 93050000 		li	a1,0
  68 005c 13850400 		mv	a0,s1
  69              	.LVL4:
  70 0060 97000000 		call	_ZN3TCB12createThreadEPPS_PFvPvES2_S2_@plt
  70      E7800000 
  71              	.LVL5:
  29:src/main.cpp  ****     mainThread->setSys(true);
  72              		.loc 1 29 5 is_stmt 1
  73              		.loc 1 29 23 is_stmt 0
  74 0068 83B70400 		ld	a5,0(s1)
  75              	.LVL6:
  76              	.LBB16:
  77              	.LBB17:
  78              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   2:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
GAS LISTING /tmp/ccPMNRj4.s 			page 3


   6:src/../h/tcb.hpp **** #include "../h/memoryAllocator.hpp"
   7:src/../h/tcb.hpp **** #include "../h/sem.hpp"
   8:src/../h/tcb.hpp **** #include "sleepingThreadList.hpp"
   9:src/../h/tcb.hpp **** 
  10:src/../h/tcb.hpp **** typedef TCB* thread_t;
  11:src/../h/tcb.hpp **** 
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** extern "C" void contextSwitch(uint64* oldSSP, uint64* newSSP);
  14:src/../h/tcb.hpp **** extern "C" void  switchToSSP();
  15:src/../h/tcb.hpp **** extern "C" void  switchToSP();
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp **** // Thread Control Block
  18:src/../h/tcb.hpp **** class TCB
  19:src/../h/tcb.hpp **** {
  20:src/../h/tcb.hpp **** public:
  21:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; delete sstack;}
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  26:src/../h/tcb.hpp **** 
  27:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****     uint64 getSSP() const { return ssp; }
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     uint64 getAddrSSP() { return (uint64) &ssp; }
  32:src/../h/tcb.hpp **** 
  33:src/../h/tcb.hpp ****     int getTid() const {return tid;}
  34:src/../h/tcb.hpp **** 
  35:src/../h/tcb.hpp ****     void setSleeping (bool sleep) {this->sleeping = sleep;}
  36:src/../h/tcb.hpp **** 
  37:src/../h/tcb.hpp ****     void setSys(bool sys) {isSys = sys;}
  79              		.loc 2 37 28 is_stmt 1
  80              		.loc 2 37 34 is_stmt 0
  81 006c 13091000 		li	s2,1
  82 0070 238C2701 		sb	s2,24(a5)
  83              	.LVL7:
  84              	.LBE17:
  85              	.LBE16:
  30:src/main.cpp  ****     TCB::running = mainThread;
  86              		.loc 1 30 5 is_stmt 1
  87              		.loc 1 30 18 is_stmt 0
  88 0074 17070000 		la	a4,_ZN3TCB7runningE
  88      03370700 
  89 007c 2330F700 		sd	a5,0(a4)
  31:src/main.cpp  ****     // Console
  32:src/main.cpp  ****     myConsole::init();
  90              		.loc 1 32 5 is_stmt 1
  91              		.loc 1 32 20 is_stmt 0
  92 0080 97000000 		call	_ZN9myConsole4initEv@plt
  92      E7800000 
  93              	.LVL8:
  33:src/main.cpp  ****     void* console_stack = MemoryAllocator::mem_alloc(CONVERT_SIZE_TO_BLOCKS(DEFAULT_STACK_SIZE));
  94              		.loc 1 33 5 is_stmt 1
  95              		.loc 1 33 53 is_stmt 0
  96 0088 13050001 		li	a0,16
  97 008c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
GAS LISTING /tmp/ccPMNRj4.s 			page 4


  97      E7800000 
  98              	.LVL9:
  99 0094 93060500 		mv	a3,a0
 100              	.LVL10:
  34:src/main.cpp  ****     TCB::createThread(&consoleOutput, reinterpret_cast<void (*)(void *)>(myConsole::monitorOutput),
 101              		.loc 1 34 5 is_stmt 1
 102              		.loc 1 34 22 is_stmt 0
 103 0098 13060000 		li	a2,0
 104 009c 97050000 		la	a1,_ZN9myConsole13monitorOutputEv
 104      83B50500 
 105 00a4 17050000 		lla	a0,.LANCHOR0+8
 105      13050500 
 106              	.LVL11:
 107 00ac 97000000 		call	_ZN3TCB12createThreadEPPS_PFvPvES2_S2_@plt
 107      E7800000 
 108              	.LVL12:
  35:src/main.cpp  ****     consoleOutput->setSys(true);
 109              		.loc 1 35 5 is_stmt 1
 110              		.loc 1 35 26 is_stmt 0
 111 00b4 83B78400 		ld	a5,8(s1)
 112              	.LVL13:
 113              	.LBB18:
 114              	.LBB19:
 115              		.loc 2 37 28 is_stmt 1
 116              		.loc 2 37 34 is_stmt 0
 117 00b8 238C2701 		sb	s2,24(a5)
 118              	.LVL14:
 119              	.LBE19:
 120              	.LBE18:
  36:src/main.cpp  ****     // Idle Thread
  37:src/main.cpp  ****     void* idle_stack = MemoryAllocator::mem_alloc(CONVERT_SIZE_TO_BLOCKS(DEFAULT_STACK_SIZE));
 121              		.loc 1 37 5 is_stmt 1
 122              		.loc 1 37 50 is_stmt 0
 123 00bc 13050001 		li	a0,16
 124 00c0 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 124      E7800000 
 125              	.LVL15:
 126 00c8 93060500 		mv	a3,a0
 127              	.LVL16:
  38:src/main.cpp  ****     TCB::createThread(&idleThread, reinterpret_cast<void (*)(void *)>(idleThreadBody), nullptr, idl
 128              		.loc 1 38 5 is_stmt 1
 129              		.loc 1 38 22 is_stmt 0
 130 00cc 13060000 		li	a2,0
 131 00d0 97050000 		lla	a1,_Z14idleThreadBodyv
 131      93850500 
 132 00d8 17050000 		lla	a0,.LANCHOR0+16
 132      13050500 
 133              	.LVL17:
 134 00e0 97000000 		call	_ZN3TCB12createThreadEPPS_PFvPvES2_S2_@plt
 134      E7800000 
 135              	.LVL18:
  39:src/main.cpp  ****     idleThread->setSys(true);
 136              		.loc 1 39 5 is_stmt 1
 137              		.loc 1 39 23 is_stmt 0
 138 00e8 83B70401 		ld	a5,16(s1)
 139              	.LVL19:
 140              	.LBB20:
GAS LISTING /tmp/ccPMNRj4.s 			page 5


 141              	.LBB21:
 142              		.loc 2 37 28 is_stmt 1
 143              		.loc 2 37 34 is_stmt 0
 144 00ec 238C2701 		sb	s2,24(a5)
 145              	.LVL20:
 146              	.LBE21:
 147              	.LBE20:
  40:src/main.cpp  ****     // interrupt
  41:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap); //sets interrupt routine
 148              		.loc 1 41 5 is_stmt 1
 149              		.loc 1 41 19 is_stmt 0
 150 00f0 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 150      83B70700 
 151              	.LVL21:
 152              	.LBB22:
 153              	.LBB23:
 154              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   2:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv
   7:src/../h/riscv.hpp **** {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  10:src/../h/riscv.hpp ****     static void pushRegisters();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     //pop x3..x31 registers from stack
  13:src/../h/riscv.hpp ****     static void popRegisters();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccPMNRj4.s 			page 6


  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     // supervisor trap handler
  85:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** };
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  90:src/../h/riscv.hpp **** {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  93:src/../h/riscv.hpp ****     return scause;
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  97:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccPMNRj4.s 			page 7


  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 102:src/../h/riscv.hpp **** {
 103:src/../h/riscv.hpp ****     uint64 volatile sepc;
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105:src/../h/riscv.hpp ****     return sepc;
 106:src/../h/riscv.hpp **** }
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 109:src/../h/riscv.hpp **** {
 110:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 114:src/../h/riscv.hpp **** {
 115:src/../h/riscv.hpp ****     uint64 volatile stvec;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 117:src/../h/riscv.hpp ****     return stvec;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 121:src/../h/riscv.hpp **** {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 155              		.loc 3 122 5 is_stmt 1
 156              		.loc 3 122 69 is_stmt 0
 157              	#APP
 158              	# 122 "src/../h/riscv.hpp" 1
 123              	}
 159              		csrw stvec, a5
 160              	# 0 "" 2
 161              	.LVL22:
 162              	#NO_APP
 163              	.LBE23:
 164              	.LBE22:
  42:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE); // enables interrupts
 165              		.loc 1 42 5 is_stmt 1
 166              	.LBB24:
 167              	.LBB25:
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 126:src/../h/riscv.hpp **** {
 127:src/../h/riscv.hpp ****     uint64 volatile stval;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 129:src/../h/riscv.hpp ****     return stval;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 133:src/../h/riscv.hpp **** {
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 138:src/../h/riscv.hpp **** {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 140:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccPMNRj4.s 			page 8


 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 143:src/../h/riscv.hpp **** {
 144:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     uint64 volatile sip;
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 151:src/../h/riscv.hpp ****     return sip;
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 155:src/../h/riscv.hpp **** {
 156:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 160:src/../h/riscv.hpp **** {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 168              		.loc 3 161 5
 169              		.loc 3 161 68 is_stmt 0
 170 00fc 93072000 		li	a5,2
 171              	#APP
 172              	# 161 "src/../h/riscv.hpp" 1
 162              	}
 173              		csrs sstatus, a5
 174              	# 0 "" 2
 175              	.LVL23:
 176              	#NO_APP
 177              	.LBE25:
 178              	.LBE24:
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     mainThread->setSys(false);
 179              		.loc 1 46 5 is_stmt 1
 180              		.loc 1 46 23 is_stmt 0
 181 0104 83B70400 		ld	a5,0(s1)
 182              	.LVL24:
 183              	.LBB26:
 184              	.LBB27:
 185              		.loc 2 37 28 is_stmt 1
 186              		.loc 2 37 34 is_stmt 0
 187 0108 238C0700 		sb	zero,24(a5)
 188              	.LVL25:
 189              	.LBE27:
 190              	.LBE26:
  47:src/main.cpp  ****     userMain();
 191              		.loc 1 47 5 is_stmt 1
 192              		.loc 1 47 13 is_stmt 0
 193 010c 97000000 		call	_Z8userMainv@plt
 193      E7800000 
 194              	.LVL26:
  48:src/main.cpp  ****     mainThread->setSys(true);
 195              		.loc 1 48 5 is_stmt 1
GAS LISTING /tmp/ccPMNRj4.s 			page 9


 196              		.loc 1 48 23 is_stmt 0
 197 0114 83B70400 		ld	a5,0(s1)
 198              	.LVL27:
 199              	.LBB28:
 200              	.LBB29:
 201              		.loc 2 37 28 is_stmt 1
 202              		.loc 2 37 34 is_stmt 0
 203 0118 238C2701 		sb	s2,24(a5)
 204              	.LVL28:
 205              	.LBE29:
 206              	.LBE28:
  49:src/main.cpp  **** 
  50:src/main.cpp  ****     // gasenje emulatora
  51:src/main.cpp  ****     __asm__ volatile("li t1, 0x100000");
 207              		.loc 1 51 5 is_stmt 1
 208              		.loc 1 51 40 is_stmt 0
 209              	#APP
 210              	# 51 "src/main.cpp" 1
  52              	    __asm__ volatile("li t2, 0x5555");
 211              		li t1, 0x100000
 212              	# 0 "" 2
 213              		.loc 1 52 5 is_stmt 1
 214              		.loc 1 52 38 is_stmt 0
 215              	# 52 "src/main.cpp" 1
  53              	    __asm__ volatile("sw t2, 0(t1)");
 216              		li t2, 0x5555
 217              	# 0 "" 2
 218              		.loc 1 53 5 is_stmt 1
 219              		.loc 1 53 37 is_stmt 0
 220              	# 53 "src/main.cpp" 1
  54              	
  55:src/main.cpp  ****     return 0;
 221              		sw t2, 0(t1)
 222              	# 0 "" 2
 223              		.loc 1 55 5 is_stmt 1
  56:src/main.cpp  **** }
 224              		.loc 1 56 1 is_stmt 0
 225              	#NO_APP
 226 012c 13050000 		li	a0,0
 227 0130 83308101 		ld	ra,24(sp)
 228              		.cfi_restore 1
 229 0134 03340101 		ld	s0,16(sp)
 230              		.cfi_restore 8
 231              		.cfi_def_cfa 2, 32
 232 0138 83348100 		ld	s1,8(sp)
 233              		.cfi_restore 9
 234 013c 03390100 		ld	s2,0(sp)
 235              		.cfi_restore 18
 236 0140 13010102 		addi	sp,sp,32
 237              		.cfi_def_cfa_offset 0
 238 0144 67800000 		jr	ra
 239              		.cfi_endproc
 240              	.LFE91:
 242              		.globl	idleThread
 243              		.globl	consoleOutput
 244              		.globl	mainThread
 245              		.bss
GAS LISTING /tmp/ccPMNRj4.s 			page 10


 246              		.align	3
 247              		.set	.LANCHOR0,. + 0
 250              	mainThread:
 251 0000 00000000 		.zero	8
 251      00000000 
 254              	consoleOutput:
 255 0008 00000000 		.zero	8
 255      00000000 
 258              	idleThread:
 259 0010 00000000 		.zero	8
 259      00000000 
 260              		.text
 261              	.Letext0:
 262              		.file 4 "src/../h/../lib/hw.h"
 263              		.file 5 "src/../h/../h/memoryAllocator.hpp"
 264              		.file 6 "src/../h/../h/../h/threadList.hpp"
 265              		.file 7 "src/../h/../h/sem.hpp"
 266              		.file 8 "src/../h/sleepingThreadList.hpp"
 267              		.file 9 "src/../h/syscall_c.hpp"
 268              		.file 10 "src/../h/consoleBuffer.hpp"
 269              		.file 11 "src/../h/myConsole.hpp"
GAS LISTING /tmp/ccPMNRj4.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccPMNRj4.s:9      .text:0000000000000000 _Z14idleThreadBodyv
     /tmp/ccPMNRj4.s:13     .text:0000000000000000 .L0 
     /tmp/ccPMNRj4.s:14     .text:0000000000000000 .L0 
     /tmp/ccPMNRj4.s:15     .text:0000000000000004 .L0 
     /tmp/ccPMNRj4.s:18     .text:000000000000000c .L0 
     /tmp/ccPMNRj4.s:19     .text:000000000000000c .L0 
     /tmp/ccPMNRj4.s:21     .text:0000000000000010 .L0 
     /tmp/ccPMNRj4.s:24     .text:0000000000000010 .L0 
     /tmp/ccPMNRj4.s:25     .text:0000000000000010 .L0 
     /tmp/ccPMNRj4.s:26     .text:0000000000000010 .L0 
     /tmp/ccPMNRj4.s:29     .text:0000000000000018 .L0 
     /tmp/ccPMNRj4.s:30     .text:000000000000001c .L0 
     /tmp/ccPMNRj4.s:36     .text:000000000000001c main
     /tmp/ccPMNRj4.s:39     .text:000000000000001c .L0 
     /tmp/ccPMNRj4.s:40     .text:000000000000001c .L0 
     /tmp/ccPMNRj4.s:41     .text:0000000000000020 .L0 
     /tmp/ccPMNRj4.s:46     .text:0000000000000030 .L0 
     /tmp/ccPMNRj4.s:47     .text:0000000000000030 .L0 
     /tmp/ccPMNRj4.s:48     .text:0000000000000030 .L0 
     /tmp/ccPMNRj4.s:49     .text:0000000000000030 .L0 
     /tmp/ccPMNRj4.s:51     .text:0000000000000034 .L0 
     /tmp/ccPMNRj4.s:53     .text:0000000000000034 .L0 
     /tmp/ccPMNRj4.s:54     .text:0000000000000034 .L0 
     /tmp/ccPMNRj4.s:57     .text:000000000000003c .L0 
     /tmp/ccPMNRj4.s:58     .text:000000000000003c .L0 
     /tmp/ccPMNRj4.s:64     .text:000000000000004c .L0 
     /tmp/ccPMNRj4.s:65     .text:000000000000004c .L0 
     /tmp/ccPMNRj4.s:73     .text:0000000000000068 .L0 
     /tmp/ccPMNRj4.s:74     .text:0000000000000068 .L0 
     /tmp/ccPMNRj4.s:80     .text:000000000000006c .L0 
     /tmp/ccPMNRj4.s:81     .text:000000000000006c .L0 
     /tmp/ccPMNRj4.s:87     .text:0000000000000074 .L0 
     /tmp/ccPMNRj4.s:88     .text:0000000000000074 .L0 
     /tmp/ccPMNRj4.s:91     .text:0000000000000080 .L0 
     /tmp/ccPMNRj4.s:92     .text:0000000000000080 .L0 
     /tmp/ccPMNRj4.s:95     .text:0000000000000088 .L0 
     /tmp/ccPMNRj4.s:96     .text:0000000000000088 .L0 
     /tmp/ccPMNRj4.s:102    .text:0000000000000098 .L0 
     /tmp/ccPMNRj4.s:103    .text:0000000000000098 .L0 
     /tmp/ccPMNRj4.s:110    .text:00000000000000b4 .L0 
     /tmp/ccPMNRj4.s:111    .text:00000000000000b4 .L0 
     /tmp/ccPMNRj4.s:116    .text:00000000000000b8 .L0 
     /tmp/ccPMNRj4.s:117    .text:00000000000000b8 .L0 
     /tmp/ccPMNRj4.s:122    .text:00000000000000bc .L0 
     /tmp/ccPMNRj4.s:123    .text:00000000000000bc .L0 
     /tmp/ccPMNRj4.s:129    .text:00000000000000cc .L0 
     /tmp/ccPMNRj4.s:130    .text:00000000000000cc .L0 
     /tmp/ccPMNRj4.s:137    .text:00000000000000e8 .L0 
     /tmp/ccPMNRj4.s:138    .text:00000000000000e8 .L0 
     /tmp/ccPMNRj4.s:143    .text:00000000000000ec .L0 
     /tmp/ccPMNRj4.s:144    .text:00000000000000ec .L0 
     /tmp/ccPMNRj4.s:149    .text:00000000000000f0 .L0 
     /tmp/ccPMNRj4.s:150    .text:00000000000000f0 .L0 
     /tmp/ccPMNRj4.s:156    .text:00000000000000f8 .L0 
  src/../h/riscv.hpp:122    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccPMNRj4.s 			page 12


     /tmp/ccPMNRj4.s:168    .text:00000000000000fc .L0 
     /tmp/ccPMNRj4.s:169    .text:00000000000000fc .L0 
     /tmp/ccPMNRj4.s:170    .text:00000000000000fc .L0 
     /tmp/ccPMNRj4.s:180    .text:0000000000000104 .L0 
     /tmp/ccPMNRj4.s:181    .text:0000000000000104 .L0 
     /tmp/ccPMNRj4.s:186    .text:0000000000000108 .L0 
     /tmp/ccPMNRj4.s:187    .text:0000000000000108 .L0 
     /tmp/ccPMNRj4.s:192    .text:000000000000010c .L0 
     /tmp/ccPMNRj4.s:193    .text:000000000000010c .L0 
     /tmp/ccPMNRj4.s:196    .text:0000000000000114 .L0 
     /tmp/ccPMNRj4.s:197    .text:0000000000000114 .L0 
     /tmp/ccPMNRj4.s:202    .text:0000000000000118 .L0 
     /tmp/ccPMNRj4.s:203    .text:0000000000000118 .L0 
     /tmp/ccPMNRj4.s:208    .text:000000000000011c .L0 
        src/main.cpp:51     .text:000000000000011c .L0 
     /tmp/ccPMNRj4.s:214    .text:0000000000000120 .L0 
        src/main.cpp:52     .text:0000000000000120 .L0 
     /tmp/ccPMNRj4.s:219    .text:0000000000000128 .L0 
        src/main.cpp:53     .text:0000000000000128 .L0 
     /tmp/ccPMNRj4.s:224    .text:000000000000012c .L0 
     /tmp/ccPMNRj4.s:226    .text:000000000000012c .L0 
     /tmp/ccPMNRj4.s:228    .text:0000000000000134 .L0 
     /tmp/ccPMNRj4.s:230    .text:0000000000000138 .L0 
     /tmp/ccPMNRj4.s:231    .text:0000000000000138 .L0 
     /tmp/ccPMNRj4.s:233    .text:000000000000013c .L0 
     /tmp/ccPMNRj4.s:235    .text:0000000000000140 .L0 
     /tmp/ccPMNRj4.s:237    .text:0000000000000144 .L0 
     /tmp/ccPMNRj4.s:239    .text:0000000000000148 .L0 
     /tmp/ccPMNRj4.s:258    .bss:0000000000000010 idleThread
     /tmp/ccPMNRj4.s:254    .bss:0000000000000008 consoleOutput
     /tmp/ccPMNRj4.s:250    .bss:0000000000000000 mainThread
     /tmp/ccPMNRj4.s:247    .bss:0000000000000000 .LANCHOR0
     /tmp/ccPMNRj4.s:270    .text:0000000000000148 .L0 
     /tmp/ccPMNRj4.s:65     .text:000000000000004c .L0 
     /tmp/ccPMNRj4.s:88     .text:0000000000000074 .L0 
     /tmp/ccPMNRj4.s:104    .text:000000000000009c .L0 
     /tmp/ccPMNRj4.s:105    .text:00000000000000a4 .L0 
     /tmp/ccPMNRj4.s:131    .text:00000000000000d0 .L0 
     /tmp/ccPMNRj4.s:132    .text:00000000000000d8 .L0 
     /tmp/ccPMNRj4.s:150    .text:00000000000000f0 .L0 
     /tmp/ccPMNRj4.s:22     .text:0000000000000010 .L2
     /tmp/ccPMNRj4.s:2483   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccPMNRj4.s:4219   .debug_str:0000000000000d11 .LASF256
     /tmp/ccPMNRj4.s:3925   .debug_str:000000000000043d .LASF257
     /tmp/ccPMNRj4.s:3941   .debug_str:00000000000004a2 .LASF258
     /tmp/ccPMNRj4.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccPMNRj4.s:261    .text:0000000000000148 .Letext0
     /tmp/ccPMNRj4.s:3791   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccPMNRj4.s:3971   .debug_str:000000000000059d .LASF0
     /tmp/ccPMNRj4.s:4003   .debug_str:00000000000006a4 .LASF1
     /tmp/ccPMNRj4.s:4137   .debug_str:0000000000000ab6 .LASF2
     /tmp/ccPMNRj4.s:3913   .debug_str:00000000000003db .LASF3
     /tmp/ccPMNRj4.s:4147   .debug_str:0000000000000b11 .LASF4
     /tmp/ccPMNRj4.s:3985   .debug_str:00000000000005f2 .LASF5
     /tmp/ccPMNRj4.s:3809   .debug_str:0000000000000096 .LASF6
     /tmp/ccPMNRj4.s:4099   .debug_str:00000000000009a5 .LASF7
     /tmp/ccPMNRj4.s:4087   .debug_str:000000000000092e .LASF8
GAS LISTING /tmp/ccPMNRj4.s 			page 13


     /tmp/ccPMNRj4.s:3997   .debug_str:0000000000000679 .LASF9
     /tmp/ccPMNRj4.s:3935   .debug_str:0000000000000474 .LASF10
     /tmp/ccPMNRj4.s:3949   .debug_str:0000000000000506 .LASF11
     /tmp/ccPMNRj4.s:3857   .debug_str:000000000000020e .LASF12
     /tmp/ccPMNRj4.s:3923   .debug_str:000000000000042e .LASF13
     /tmp/ccPMNRj4.s:3875   .debug_str:0000000000000283 .LASF14
     /tmp/ccPMNRj4.s:3855   .debug_str:00000000000001fe .LASF15
     /tmp/ccPMNRj4.s:4189   .debug_str:0000000000000c33 .LASF16
     /tmp/ccPMNRj4.s:3905   .debug_str:0000000000000384 .LASF17
     /tmp/ccPMNRj4.s:4177   .debug_str:0000000000000bf3 .LASF18
     /tmp/ccPMNRj4.s:4149   .debug_str:0000000000000b18 .LASF19
     /tmp/ccPMNRj4.s:3807   .debug_str:000000000000008a .LASF21
     /tmp/ccPMNRj4.s:4199   .debug_str:0000000000000c60 .LASF23
     /tmp/ccPMNRj4.s:4051   .debug_str:0000000000000835 .LASF25
     /tmp/ccPMNRj4.s:3835   .debug_str:0000000000000163 .LASF20
     /tmp/ccPMNRj4.s:4247   .debug_str:0000000000000ed5 .LASF22
     /tmp/ccPMNRj4.s:4009   .debug_str:00000000000006c9 .LASF24
     /tmp/ccPMNRj4.s:4261   .debug_str:0000000000000f25 .LASF26
     /tmp/ccPMNRj4.s:3847   .debug_str:00000000000001ba .LASF27
     /tmp/ccPMNRj4.s:4281   .debug_str:0000000000000fb5 .LASF28
     /tmp/ccPMNRj4.s:4265   .debug_str:0000000000000f55 .LASF29
     /tmp/ccPMNRj4.s:4139   .debug_str:0000000000000ac4 .LASF30
     /tmp/ccPMNRj4.s:3841   .debug_str:000000000000018e .LASF31
     /tmp/ccPMNRj4.s:4057   .debug_str:0000000000000859 .LASF32
     /tmp/ccPMNRj4.s:4239   .debug_str:0000000000000e85 .LASF33
     /tmp/ccPMNRj4.s:4063   .debug_str:000000000000089b .LASF34
     /tmp/ccPMNRj4.s:4257   .debug_str:0000000000000f19 .LASF35
     /tmp/ccPMNRj4.s:3993   .debug_str:0000000000000649 .LASF36
     /tmp/ccPMNRj4.s:4187   .debug_str:0000000000000c26 .LASF37
     /tmp/ccPMNRj4.s:4031   .debug_str:000000000000076d .LASF38
     /tmp/ccPMNRj4.s:4077   .debug_str:00000000000008f2 .LASF259
     /tmp/ccPMNRj4.s:4029   .debug_str:0000000000000761 .LASF165
     /tmp/ccPMNRj4.s:3921   .debug_str:0000000000000417 .LASF167
     /tmp/ccPMNRj4.s:4267   .debug_str:0000000000000f60 .LASF39
     /tmp/ccPMNRj4.s:4313   .debug_str:00000000000010e2 .LASF40
     /tmp/ccPMNRj4.s:3893   .debug_str:00000000000002f9 .LASF81
     /tmp/ccPMNRj4.s:3895   .debug_str:000000000000030f .LASF83
     /tmp/ccPMNRj4.s:4141   .debug_str:0000000000000ada .LASF41
     /tmp/ccPMNRj4.s:3845   .debug_str:00000000000001a5 .LASF42
     /tmp/ccPMNRj4.s:4203   .debug_str:0000000000000c99 .LASF43
     /tmp/ccPMNRj4.s:3919   .debug_str:0000000000000401 .LASF44
     /tmp/ccPMNRj4.s:4215   .debug_str:0000000000000cfc .LASF53
     /tmp/ccPMNRj4.s:4319   .debug_str:0000000000001130 .LASF45
     /tmp/ccPMNRj4.s:3945   .debug_str:00000000000004de .LASF46
     /tmp/ccPMNRj4.s:3843   .debug_str:0000000000000195 .LASF47
     /tmp/ccPMNRj4.s:3933   .debug_str:0000000000000468 .LASF48
     /tmp/ccPMNRj4.s:3801   .debug_str:0000000000000050 .LASF49
     /tmp/ccPMNRj4.s:4025   .debug_str:000000000000073f .LASF51
     /tmp/ccPMNRj4.s:4175   .debug_str:0000000000000be0 .LASF50
     /tmp/ccPMNRj4.s:3957   .debug_str:0000000000000543 .LASF52
     /tmp/ccPMNRj4.s:3799   .debug_str:000000000000004b .LASF54
     /tmp/ccPMNRj4.s:4291   .debug_str:0000000000001009 .LASF55
     /tmp/ccPMNRj4.s:4311   .debug_str:00000000000010dc .LASF56
     /tmp/ccPMNRj4.s:3907   .debug_str:000000000000039a .LASF57
     /tmp/ccPMNRj4.s:4231   .debug_str:0000000000000e25 .LASF58
     /tmp/ccPMNRj4.s:4195   .debug_str:0000000000000c4e .LASF59
     /tmp/ccPMNRj4.s:3859   .debug_str:000000000000021d .LASF60
GAS LISTING /tmp/ccPMNRj4.s 			page 14


     /tmp/ccPMNRj4.s:4067   .debug_str:00000000000008bd .LASF61
     /tmp/ccPMNRj4.s:3879   .debug_str:00000000000002ad .LASF62
     /tmp/ccPMNRj4.s:4159   .debug_str:0000000000000b59 .LASF63
     /tmp/ccPMNRj4.s:4055   .debug_str:0000000000000854 .LASF64
     /tmp/ccPMNRj4.s:4227   .debug_str:0000000000000e0e .LASF65
     /tmp/ccPMNRj4.s:4095   .debug_str:0000000000000986 .LASF66
     /tmp/ccPMNRj4.s:4011   .debug_str:00000000000006d6 .LASF68
     /tmp/ccPMNRj4.s:3887   .debug_str:00000000000002de .LASF67
     /tmp/ccPMNRj4.s:3867   .debug_str:000000000000024b .LASF69
     /tmp/ccPMNRj4.s:4167   .debug_str:0000000000000ba9 .LASF110
     /tmp/ccPMNRj4.s:4001   .debug_str:000000000000069f .LASF70
     /tmp/ccPMNRj4.s:3821   .debug_str:0000000000000108 .LASF71
     /tmp/ccPMNRj4.s:4083   .debug_str:0000000000000912 .LASF72
     /tmp/ccPMNRj4.s:4093   .debug_str:000000000000097d .LASF73
     /tmp/ccPMNRj4.s:4079   .debug_str:00000000000008f7 .LASF74
     /tmp/ccPMNRj4.s:3951   .debug_str:0000000000000514 .LASF260
     /tmp/ccPMNRj4.s:4039   .debug_str:00000000000007d1 .LASF75
     /tmp/ccPMNRj4.s:3813   .debug_str:00000000000000a8 .LASF76
     /tmp/ccPMNRj4.s:4197   .debug_str:0000000000000c57 .LASF77
     /tmp/ccPMNRj4.s:4041   .debug_str:00000000000007db .LASF78
     /tmp/ccPMNRj4.s:3981   .debug_str:00000000000005dd .LASF79
     /tmp/ccPMNRj4.s:4201   .debug_str:0000000000000c6b .LASF80
     /tmp/ccPMNRj4.s:3865   .debug_str:0000000000000240 .LASF82
     /tmp/ccPMNRj4.s:4233   .debug_str:0000000000000e2f .LASF84
     /tmp/ccPMNRj4.s:4065   .debug_str:00000000000008b2 .LASF85
     /tmp/ccPMNRj4.s:4007   .debug_str:00000000000006c0 .LASF86
     /tmp/ccPMNRj4.s:4309   .debug_str:00000000000010d7 .LASF87
     /tmp/ccPMNRj4.s:4181   .debug_str:0000000000000c10 .LASF88
     /tmp/ccPMNRj4.s:3795   .debug_str:0000000000000021 .LASF89
     /tmp/ccPMNRj4.s:3915   .debug_str:00000000000003e1 .LASF90
     /tmp/ccPMNRj4.s:4021   .debug_str:0000000000000722 .LASF91
     /tmp/ccPMNRj4.s:4241   .debug_str:0000000000000e91 .LASF92
     /tmp/ccPMNRj4.s:4085   .debug_str:0000000000000922 .LASF93
     /tmp/ccPMNRj4.s:3991   .debug_str:000000000000062a .LASF94
     /tmp/ccPMNRj4.s:4325   .debug_str:000000000000114e .LASF95
     /tmp/ccPMNRj4.s:4305   .debug_str:00000000000010af .LASF96
     /tmp/ccPMNRj4.s:4163   .debug_str:0000000000000b95 .LASF97
     /tmp/ccPMNRj4.s:4213   .debug_str:0000000000000cde .LASF98
     /tmp/ccPMNRj4.s:4119   .debug_str:0000000000000a47 .LASF99
     /tmp/ccPMNRj4.s:4043   .debug_str:00000000000007fc .LASF100
     /tmp/ccPMNRj4.s:3897   .debug_str:0000000000000330 .LASF101
     /tmp/ccPMNRj4.s:4275   .debug_str:0000000000000f85 .LASF102
     /tmp/ccPMNRj4.s:4179   .debug_str:0000000000000c09 .LASF103
     /tmp/ccPMNRj4.s:3877   .debug_str:0000000000000293 .LASF104
     /tmp/ccPMNRj4.s:4111   .debug_str:00000000000009fb .LASF105
     /tmp/ccPMNRj4.s:4151   .debug_str:0000000000000b1d .LASF106
     /tmp/ccPMNRj4.s:4135   .debug_str:0000000000000aa2 .LASF107
     /tmp/ccPMNRj4.s:4027   .debug_str:000000000000074c .LASF108
     /tmp/ccPMNRj4.s:4145   .debug_str:0000000000000afc .LASF113
     /tmp/ccPMNRj4.s:4127   .debug_str:0000000000000a7c .LASF109
     /tmp/ccPMNRj4.s:4259   .debug_str:0000000000000f20 .LASF111
     /tmp/ccPMNRj4.s:3869   .debug_str:000000000000025e .LASF112
     /tmp/ccPMNRj4.s:4171   .debug_str:0000000000000bbc .LASF114
     /tmp/ccPMNRj4.s:4277   .debug_str:0000000000000fa0 .LASF214
     /tmp/ccPMNRj4.s:4125   .debug_str:0000000000000a77 .LASF115
     /tmp/ccPMNRj4.s:3837   .debug_str:000000000000016f .LASF116
     /tmp/ccPMNRj4.s:4129   .debug_str:0000000000000a81 .LASF117
GAS LISTING /tmp/ccPMNRj4.s 			page 15


     /tmp/ccPMNRj4.s:4263   .debug_str:0000000000000f3e .LASF118
     /tmp/ccPMNRj4.s:3889   .debug_str:00000000000002e7 .LASF119
     /tmp/ccPMNRj4.s:4173   .debug_str:0000000000000bd1 .LASF120
     /tmp/ccPMNRj4.s:4193   .debug_str:0000000000000c47 .LASF121
     /tmp/ccPMNRj4.s:4097   .debug_str:0000000000000994 .LASF122
     /tmp/ccPMNRj4.s:3825   .debug_str:0000000000000112 .LASF123
     /tmp/ccPMNRj4.s:4061   .debug_str:0000000000000887 .LASF124
     /tmp/ccPMNRj4.s:4071   .debug_str:00000000000008da .LASF125
     /tmp/ccPMNRj4.s:3989   .debug_str:0000000000000618 .LASF126
     /tmp/ccPMNRj4.s:3961   .debug_str:000000000000055b .LASF127
     /tmp/ccPMNRj4.s:3901   .debug_str:0000000000000354 .LASF128
     /tmp/ccPMNRj4.s:3969   .debug_str:0000000000000597 .LASF129
     /tmp/ccPMNRj4.s:4103   .debug_str:00000000000009b3 .LASF130
     /tmp/ccPMNRj4.s:4307   .debug_str:00000000000010cc .LASF131
     /tmp/ccPMNRj4.s:3873   .debug_str:000000000000026d .LASF132
     /tmp/ccPMNRj4.s:3803   .debug_str:0000000000000060 .LASF133
     /tmp/ccPMNRj4.s:3815   .debug_str:00000000000000c9 .LASF134
     /tmp/ccPMNRj4.s:3979   .debug_str:00000000000005d1 .LASF135
     /tmp/ccPMNRj4.s:4081   .debug_str:0000000000000905 .LASF136
     /tmp/ccPMNRj4.s:4245   .debug_str:0000000000000ec4 .LASF137
     /tmp/ccPMNRj4.s:4251   .debug_str:0000000000000efa .LASF138
     /tmp/ccPMNRj4.s:4295   .debug_str:0000000000001037 .LASF139
     /tmp/ccPMNRj4.s:3839   .debug_str:000000000000017b .LASF140
     /tmp/ccPMNRj4.s:4073   .debug_str:00000000000008e2 .LASF141
     /tmp/ccPMNRj4.s:4317   .debug_str:0000000000001107 .LASF142
     /tmp/ccPMNRj4.s:3793   .debug_str:0000000000000000 .LASF143
     /tmp/ccPMNRj4.s:3805   .debug_str:0000000000000068 .LASF261
     /tmp/ccPMNRj4.s:3899   .debug_str:0000000000000338 .LASF144
     /tmp/ccPMNRj4.s:3995   .debug_str:000000000000065a .LASF145
     /tmp/ccPMNRj4.s:3881   .debug_str:00000000000002b6 .LASF262
     /tmp/ccPMNRj4.s:3911   .debug_str:00000000000003bc .LASF263
     /tmp/ccPMNRj4.s:4299   .debug_str:0000000000001054 .LASF146
     /tmp/ccPMNRj4.s:3797   .debug_str:0000000000000027 .LASF147
     /tmp/ccPMNRj4.s:3891   .debug_str:00000000000002ec .LASF148
     /tmp/ccPMNRj4.s:4293   .debug_str:000000000000100f .LASF149
     /tmp/ccPMNRj4.s:4287   .debug_str:0000000000000fee .LASF150
     /tmp/ccPMNRj4.s:4089   .debug_str:0000000000000941 .LASF151
     /tmp/ccPMNRj4.s:3963   .debug_str:0000000000000562 .LASF152
     /tmp/ccPMNRj4.s:4161   .debug_str:0000000000000b6a .LASF153
     /tmp/ccPMNRj4.s:4321   .debug_str:000000000000113d .LASF154
     /tmp/ccPMNRj4.s:4271   .debug_str:0000000000000f75 .LASF155
     /tmp/ccPMNRj4.s:4289   .debug_str:0000000000000ffa .LASF264
     /tmp/ccPMNRj4.s:3917   .debug_str:00000000000003f5 .LASF156
     /tmp/ccPMNRj4.s:4217   .debug_str:0000000000000d04 .LASF157
     /tmp/ccPMNRj4.s:3883   .debug_str:00000000000002c0 .LASF158
     /tmp/ccPMNRj4.s:4157   .debug_str:0000000000000b4b .LASF159
     /tmp/ccPMNRj4.s:3909   .debug_str:00000000000003a1 .LASF160
     /tmp/ccPMNRj4.s:3973   .debug_str:00000000000005aa .LASF161
     /tmp/ccPMNRj4.s:4285   .debug_str:0000000000000fd4 .LASF162
     /tmp/ccPMNRj4.s:3959   .debug_str:0000000000000550 .LASF163
     /tmp/ccPMNRj4.s:3967   .debug_str:000000000000057f .LASF164
     /tmp/ccPMNRj4.s:4005   .debug_str:00000000000006b7 .LASF166
     /tmp/ccPMNRj4.s:4243   .debug_str:0000000000000eaf .LASF168
     /tmp/ccPMNRj4.s:4133   .debug_str:0000000000000a99 .LASF169
     /tmp/ccPMNRj4.s:4069   .debug_str:00000000000008c5 .LASF170
     /tmp/ccPMNRj4.s:4107   .debug_str:00000000000009dc .LASF171
     /tmp/ccPMNRj4.s:4115   .debug_str:0000000000000a20 .LASF172
GAS LISTING /tmp/ccPMNRj4.s 			page 16


     /tmp/ccPMNRj4.s:4229   .debug_str:0000000000000e1e .LASF173
     /tmp/ccPMNRj4.s:3999   .debug_str:000000000000068c .LASF174
     /tmp/ccPMNRj4.s:4049   .debug_str:000000000000082d .LASF175
     /tmp/ccPMNRj4.s:4225   .debug_str:0000000000000dfa .LASF176
     /tmp/ccPMNRj4.s:4053   .debug_str:000000000000084c .LASF177
     /tmp/ccPMNRj4.s:3927   .debug_str:000000000000044a .LASF178
     /tmp/ccPMNRj4.s:4017   .debug_str:0000000000000714 .LASF179
     /tmp/ccPMNRj4.s:4117   .debug_str:0000000000000a33 .LASF180
     /tmp/ccPMNRj4.s:4323   .debug_str:0000000000001146 .LASF181
     /tmp/ccPMNRj4.s:3977   .debug_str:00000000000005bd .LASF182
     /tmp/ccPMNRj4.s:4185   .debug_str:0000000000000c1f .LASF183
     /tmp/ccPMNRj4.s:4153   .debug_str:0000000000000b31 .LASF184
     /tmp/ccPMNRj4.s:4155   .debug_str:0000000000000b44 .LASF185
     /tmp/ccPMNRj4.s:3863   .debug_str:000000000000022d .LASF186
     /tmp/ccPMNRj4.s:3871   .debug_str:0000000000000267 .LASF187
     /tmp/ccPMNRj4.s:3965   .debug_str:000000000000056d .LASF188
     /tmp/ccPMNRj4.s:3975   .debug_str:00000000000005b7 .LASF189
     /tmp/ccPMNRj4.s:3885   .debug_str:00000000000002cc .LASF190
     /tmp/ccPMNRj4.s:3811   .debug_str:000000000000009d .LASF191
     /tmp/ccPMNRj4.s:4143   .debug_str:0000000000000ae4 .LASF192
     /tmp/ccPMNRj4.s:4255   .debug_str:0000000000000f0e .LASF193
     /tmp/ccPMNRj4.s:4109   .debug_str:00000000000009e3 .LASF194
     /tmp/ccPMNRj4.s:4273   .debug_str:0000000000000f7b .LASF195
     /tmp/ccPMNRj4.s:4297   .debug_str:000000000000103e .LASF196
     /tmp/ccPMNRj4.s:4269   .debug_str:0000000000000f6b .LASF197
     /tmp/ccPMNRj4.s:4037   .debug_str:00000000000007bb .LASF198
     /tmp/ccPMNRj4.s:3955   .debug_str:0000000000000534 .LASF199
     /tmp/ccPMNRj4.s:3947   .debug_str:00000000000004ea .LASF200
     /tmp/ccPMNRj4.s:4091   .debug_str:0000000000000968 .LASF201
     /tmp/ccPMNRj4.s:3827   .debug_str:000000000000011c .LASF202
     /tmp/ccPMNRj4.s:3937   .debug_str:0000000000000484 .LASF203
     /tmp/ccPMNRj4.s:4205   .debug_str:0000000000000ca4 .LASF204
     /tmp/ccPMNRj4.s:4249   .debug_str:0000000000000eec .LASF205
     /tmp/ccPMNRj4.s:4169   .debug_str:0000000000000bb5 .LASF206
     /tmp/ccPMNRj4.s:4131   .debug_str:0000000000000a8a .LASF207
     /tmp/ccPMNRj4.s:4035   .debug_str:00000000000007ad .LASF208
     /tmp/ccPMNRj4.s:4211   .debug_str:0000000000000cd4 .LASF209
     /tmp/ccPMNRj4.s:4047   .debug_str:0000000000000823 .LASF210
     /tmp/ccPMNRj4.s:4123   .debug_str:0000000000000a60 .LASF211
     /tmp/ccPMNRj4.s:3851   .debug_str:00000000000001dd .LASF212
     /tmp/ccPMNRj4.s:4013   .debug_str:00000000000006ef .LASF213
     /tmp/ccPMNRj4.s:4033   .debug_str:0000000000000794 .LASF215
     /tmp/ccPMNRj4.s:4105   .debug_str:00000000000009c3 .LASF265
     /tmp/ccPMNRj4.s:4253   .debug_str:0000000000000f07 .LASF216
     /tmp/ccPMNRj4.s:3849   .debug_str:00000000000001c1 .LASF217
     /tmp/ccPMNRj4.s:4059   .debug_str:000000000000086b .LASF218
     /tmp/ccPMNRj4.s:4221   .debug_str:0000000000000dd5 .LASF219
     /tmp/ccPMNRj4.s:4207   .debug_str:0000000000000ca9 .LASF220
     /tmp/ccPMNRj4.s:3819   .debug_str:00000000000000f0 .LASF221
     /tmp/ccPMNRj4.s:3939   .debug_str:000000000000048a .LASF222
     /tmp/ccPMNRj4.s:4183   .debug_str:0000000000000c15 .LASF223
     /tmp/ccPMNRj4.s:3831   .debug_str:0000000000000153 .LASF224
     /tmp/ccPMNRj4.s:4023   .debug_str:000000000000072a .LASF225
     /tmp/ccPMNRj4.s:4075   .debug_str:00000000000008ed .LASF226
     /tmp/ccPMNRj4.s:4301   .debug_str:000000000000107b .LASF227
     /tmp/ccPMNRj4.s:4209   .debug_str:0000000000000cc0 .LASF228
     /tmp/ccPMNRj4.s:4235   .debug_str:0000000000000e52 .LASF229
GAS LISTING /tmp/ccPMNRj4.s 			page 17


     /tmp/ccPMNRj4.s:4015   .debug_str:0000000000000706 .LASF230
     /tmp/ccPMNRj4.s:4303   .debug_str:0000000000001090 .LASF231
     /tmp/ccPMNRj4.s:4279   .debug_str:0000000000000fb0 .LASF232
     /tmp/ccPMNRj4.s:3829   .debug_str:000000000000013e .LASF233
     /tmp/ccPMNRj4.s:3953   .debug_str:0000000000000526 .LASF234
     /tmp/ccPMNRj4.s:3903   .debug_str:0000000000000365 .LASF235
     /tmp/ccPMNRj4.s:4283   .debug_str:0000000000000fc7 .LASF236
     /tmp/ccPMNRj4.s:3943   .debug_str:00000000000004c0 .LASF237
     /tmp/ccPMNRj4.s:4101   .debug_str:00000000000009ac .LASF238
     /tmp/ccPMNRj4.s:4191   .debug_str:0000000000000c3f .LASF239
     /tmp/ccPMNRj4.s:3853   .debug_str:00000000000001ec .LASF240
     /tmp/ccPMNRj4.s:4045   .debug_str:0000000000000818 .LASF241
     /tmp/ccPMNRj4.s:4237   .debug_str:0000000000000e77 .LASF242
     /tmp/ccPMNRj4.s:3833   .debug_str:0000000000000158 .LASF243
     /tmp/ccPMNRj4.s:3931   .debug_str:0000000000000463 .LASF244
     /tmp/ccPMNRj4.s:37     .text:000000000000001c .LFB91
     /tmp/ccPMNRj4.s:240    .text:0000000000000148 .LFE91
     /tmp/ccPMNRj4.s:3861   .debug_str:0000000000000222 .LASF245
     /tmp/ccPMNRj4.s:3662   .debug_loc:0000000000000000 .LLST0
     /tmp/ccPMNRj4.s:4223   .debug_str:0000000000000dec .LASF246
     /tmp/ccPMNRj4.s:3673   .debug_loc:0000000000000036 .LLST1
     /tmp/ccPMNRj4.s:3983   .debug_str:00000000000005e7 .LASF247
     /tmp/ccPMNRj4.s:3684   .debug_loc:000000000000006c .LLST2
     /tmp/ccPMNRj4.s:76     .text:000000000000006c .LBB16
     /tmp/ccPMNRj4.s:85     .text:0000000000000074 .LBE16
     /tmp/ccPMNRj4.s:3695   .debug_loc:00000000000000a2 .LLST3
     /tmp/ccPMNRj4.s:3703   .debug_loc:00000000000000c6 .LLST4
     /tmp/ccPMNRj4.s:113    .text:00000000000000b8 .LBB18
     /tmp/ccPMNRj4.s:120    .text:00000000000000bc .LBE18
     /tmp/ccPMNRj4.s:3710   .debug_loc:00000000000000e9 .LLST5
     /tmp/ccPMNRj4.s:3718   .debug_loc:000000000000010d .LLST6
     /tmp/ccPMNRj4.s:140    .text:00000000000000ec .LBB20
     /tmp/ccPMNRj4.s:147    .text:00000000000000f0 .LBE20
     /tmp/ccPMNRj4.s:3725   .debug_loc:0000000000000130 .LLST7
     /tmp/ccPMNRj4.s:3733   .debug_loc:0000000000000154 .LLST8
     /tmp/ccPMNRj4.s:152    .text:00000000000000f8 .LBB22
     /tmp/ccPMNRj4.s:164    .text:00000000000000fc .LBE22
     /tmp/ccPMNRj4.s:166    .text:00000000000000fc .LBB24
     /tmp/ccPMNRj4.s:178    .text:0000000000000104 .LBE24
     /tmp/ccPMNRj4.s:3740   .debug_loc:0000000000000177 .LLST9
     /tmp/ccPMNRj4.s:183    .text:0000000000000108 .LBB26
     /tmp/ccPMNRj4.s:190    .text:000000000000010c .LBE26
     /tmp/ccPMNRj4.s:3748   .debug_loc:000000000000019b .LLST10
     /tmp/ccPMNRj4.s:3756   .debug_loc:00000000000001bf .LLST11
     /tmp/ccPMNRj4.s:199    .text:0000000000000118 .LBB28
     /tmp/ccPMNRj4.s:206    .text:000000000000011c .LBE28
     /tmp/ccPMNRj4.s:3763   .debug_loc:00000000000001e2 .LLST12
     /tmp/ccPMNRj4.s:3771   .debug_loc:0000000000000206 .LLST13
     /tmp/ccPMNRj4.s:55     .text:000000000000003c .LVL1
     /tmp/ccPMNRj4.s:60     .text:0000000000000048 .LVL2
     /tmp/ccPMNRj4.s:71     .text:0000000000000068 .LVL5
     /tmp/ccPMNRj4.s:93     .text:0000000000000088 .LVL8
     /tmp/ccPMNRj4.s:98     .text:0000000000000094 .LVL9
     /tmp/ccPMNRj4.s:108    .text:00000000000000b4 .LVL12
     /tmp/ccPMNRj4.s:125    .text:00000000000000c8 .LVL15
     /tmp/ccPMNRj4.s:135    .text:00000000000000e8 .LVL18
     /tmp/ccPMNRj4.s:194    .text:0000000000000114 .LVL26
GAS LISTING /tmp/ccPMNRj4.s 			page 18


     /tmp/ccPMNRj4.s:4315   .debug_str:00000000000010f8 .LASF248
     /tmp/ccPMNRj4.s:3987   .debug_str:0000000000000604 .LASF249
     /tmp/ccPMNRj4.s:10     .text:0000000000000000 .LFB90
     /tmp/ccPMNRj4.s:31     .text:000000000000001c .LFE90
     /tmp/ccPMNRj4.s:27     .text:0000000000000018 .LVL0
     /tmp/ccPMNRj4.s:3823   .debug_str:000000000000010d .LASF250
     /tmp/ccPMNRj4.s:4019   .debug_str:000000000000071c .LASF251
     /tmp/ccPMNRj4.s:3929   .debug_str:000000000000045e .LASF266
     /tmp/ccPMNRj4.s:4113   .debug_str:0000000000000a13 .LASF252
     /tmp/ccPMNRj4.s:4165   .debug_str:0000000000000ba0 .LASF254
     /tmp/ccPMNRj4.s:3817   .debug_str:00000000000000db .LASF253
     /tmp/ccPMNRj4.s:4121   .debug_str:0000000000000a50 .LASF255
     /tmp/ccPMNRj4.s:62     .text:000000000000004c .LVL3
     /tmp/ccPMNRj4.s:69     .text:0000000000000060 .LVL4
     /tmp/ccPMNRj4.s:100    .text:0000000000000098 .LVL10
     /tmp/ccPMNRj4.s:106    .text:00000000000000ac .LVL11
     /tmp/ccPMNRj4.s:127    .text:00000000000000cc .LVL16
     /tmp/ccPMNRj4.s:133    .text:00000000000000e0 .LVL17
     /tmp/ccPMNRj4.s:75     .text:000000000000006c .LVL6
     /tmp/ccPMNRj4.s:83     .text:0000000000000074 .LVL7
     /tmp/ccPMNRj4.s:112    .text:00000000000000b8 .LVL13
     /tmp/ccPMNRj4.s:118    .text:00000000000000bc .LVL14
     /tmp/ccPMNRj4.s:139    .text:00000000000000ec .LVL19
     /tmp/ccPMNRj4.s:145    .text:00000000000000f0 .LVL20
     /tmp/ccPMNRj4.s:161    .text:00000000000000fc .LVL22
     /tmp/ccPMNRj4.s:175    .text:0000000000000104 .LVL23
     /tmp/ccPMNRj4.s:182    .text:0000000000000108 .LVL24
     /tmp/ccPMNRj4.s:188    .text:000000000000010c .LVL25
     /tmp/ccPMNRj4.s:198    .text:0000000000000118 .LVL27
     /tmp/ccPMNRj4.s:204    .text:000000000000011c .LVL28
     /tmp/ccPMNRj4.s:271    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z15thread_dispatchv
_ZN15MemoryAllocator10initMemoryEv
_ZN15MemoryAllocator9mem_allocEm
_ZN3TCB12createThreadEPPS_PFvPvES2_S2_
_ZN3TCB7runningE
_ZN9myConsole4initEv
_ZN9myConsole13monitorOutputEv
_ZN5Riscv14supervisorTrapEv
_Z8userMainv
